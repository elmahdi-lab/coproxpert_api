name: Deploy CoproXpert API

on:
  push:
    branches: [ main ]

env:
  GO_VERSION: 1.23
  BINARY_NAME: main
  LISTENER_BINARY_NAME: main_listener
  REMOTE_DIR: /home/deploy/app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build main package
        run: |
          go build -o ${{ env.BINARY_NAME }} ./cmd/main.go
          chmod +x ${{ env.BINARY_NAME }}

      - name: Build main listener package
        run: |
          go build -o ${{ env.LISTENER_BINARY_NAME }} ./main_listener.go
          chmod +x ${{ env.LISTENER_BINARY_NAME }}

      - name: Upload Main artifact
        uses: actions/upload-artifact@v3
        with:
          name: go-binary
          path: ${{ env.BINARY_NAME }}

      - name: Upload Listener artifact
        uses: actions/upload-artifact@v3
        with:
          name: go-binary
          path: ${{ env.LISTENER_BINARY_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: go-binary

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy via SSH
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: "${{ env.BINARY_NAME }}"
          target: "${{ env.REMOTE_DIR }}"

      - name: Restart service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            sudo systemctl stop ${{ env.BINARY_NAME }}.service
            sudo cp ${{ env.REMOTE_DIR }}/${{ env.BINARY_NAME }} /usr/local/bin/
            sudo systemctl start ${{ env.BINARY_NAME }}.service
            sudo systemctl status ${{ env.BINARY_NAME }}.service